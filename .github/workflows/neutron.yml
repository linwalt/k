name: Neutron Build CI

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set build date
      id: get-date
      run: | 
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
    - name: toolchain & zip
      run: git clone --depth=1 https://gitlab.com/dakkshesh07/neutron-clang ~/tc/neutron-clang && git clone --depth=1 https://github.com/walternewtz/AnyKernel3 ~/anykernel3
    - name: configure
      run: make O=out ARCH=arm64 beryllium_defconfig
    - name: make
      run: make O=out ARCH=arm64 CC=clang CROSS_COMPILE=~/tc/neutron-clang/bin/aarch64-linux-gnu- CROSS_COMPILE_ARM32=~/tc/neutron-clang/bin/arm-linux-gnueabi- AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip -j$(nproc --all)
    - name: Kernel Image
      run: cp out/arch/arm64/boot/Image.gz-dtb /home/runner/anykernel3/Image.gz-dtb
    - name: zip it
      run:  cd /home/runner/anykernel3 && zip -r9 linneut-${{ steps.get-date.outputs.date }}.zip  * -x README linneut-${{ steps.get-date.outputs.date }}.zip
    - name: upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: kernel
        path: /home/runner/anykernel3/linneut-${{ steps.get-date.outputs.date }}.zip
